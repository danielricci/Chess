<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="Chess">
    <property environment="env"/>
    <property name="Einstein.location" value="../../einstein-assets-editor/Einstein"/>
    <property name="Gosling.location" value="../../gosling-engine/Gosling"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Project and External Dependencies.libraryclasspath">
        <pathelement location="../../../.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.7.21/139535a69a4239db087de9bab0bee568bf8e0b70/slf4j-api-1.7.21.jar"/>
        <pathelement location="../../../.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar"/>
        <pathelement location="../../../.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar"/>
    </path>
    <path id="Gosling.classpath">
        <pathelement location="${Gosling.location}/bin"/>
    </path>
    <path id="Chess.classpath">
        <pathelement location="bin"/>
        <path refid="Project and External Dependencies.libraryclasspath"/>
        <path refid="Gosling.classpath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="game">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="data">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${Gosling.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${Gosling.location}" inheritAll="false" target="build-project"/>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="game"/>
            <src path="data"/>
            <classpath refid="Chess.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects">
        <ant antfile="build.xml" dir="${Einstein.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${Einstein.location}" inheritAll="false" target="build"/>
    </target>
    <target name="Chess">
        <java classname="application.Chess" failonerror="true" fork="yes">
            <arg line="-developer"/>
            <classpath refid="Chess.classpath"/>
        </java>
    </target>
    <target name="MainApplication">
        <java classname="application.MainApplication" failonerror="true" fork="yes">
            <classpath refid="Chess.classpath"/>
        </java>
    </target>
</project>
